{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "RankMoviesByRating"
				},
				{
					"name": "AggregateRating"
				},
				{
					"name": "Upsertiftrue"
				}
			],
			"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 select(mapColumn(\n\t\tMovie = Column_1,\n\t\tTitle = Column_2,\n\t\tGenres = Column_3,\n\t\tYear = Column_4,\n\t\tRating = Column_5,\n\t\t{Rotten Tomato} = Column_6\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(Year) > 1950) ~> Filter1\nFilter1 derive(PrimaryGenere = iif(locate(\"|\",Genres)>1,left(Genres,locate(\"|\",Genres)-1),Genres)) ~> DerivedColumn1\nDerivedColumn1 window(over(PrimaryGenere,\n\t\tYear),\n\tasc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMoviesByRating\nRankMoviesByRating aggregate(groupBy(PrimaryGenere,\n\t\tYear),\n\tAverageRating = avg(toInteger({Rotten Tomato})),\n\t\tHighestRated = first(Title),\n\t\tLowestRated = last(Title),\n\t\tNumberOfMovies = count()) ~> AggregateRating\nAggregateRating alterRow(upsertIf(true())) ~> Upsertiftrue\nUpsertiftrue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}